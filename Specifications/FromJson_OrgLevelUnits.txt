Test suite SaveTests : Interface can be saved using any combinations of the parameters
Number of generated test cases included : 16

----------------------------------------------------------------
Test case SaveTests-1 : Test 1

When OrgLevel1 is (Id=1,Code=Division) 
    and OrgLevel2 is (Id=2,Code=Department) 
    and OrgLevel3 is (Id=3,Code=Team) 
    and OrgLevel4 is (Id=4,Code=Cell) 
    and ordering of ORG levels is no sorting 
Then ORG levels 1-4 are present 


----------------------------------------------------------------
Test case SaveTests-2 : Test 2

When OrgLevel1 is (Id=1,Code=Division) 
    and OrgLevel2 is (Id=2,Code=Department) 
    and OrgLevel3 is (Id=3,Code=Team) 
    and OrgLevel4 is absent 
    and ordering of ORG levels is sorted ascending 
Then parameters are sorted in ascending order 
    and not all ORG levels 1-4 are present 


----------------------------------------------------------------
Test case SaveTests-3 : Test 3

When OrgLevel1 is (Id=1,Code=Division) 
    and OrgLevel2 is (Id=2,Code=Department) 
    and OrgLevel3 is absent 
    and OrgLevel4 is (Id=4,Code=Cell) 
    and ordering of ORG levels is sorted descending 
Then parameters are sorted in descending order 
    and not all ORG levels 1-4 are present 


----------------------------------------------------------------
Test case SaveTests-4 : Test 4

When OrgLevel1 is (Id=1,Code=Division) 
    and OrgLevel2 is (Id=2,Code=Department) 
    and OrgLevel3 is absent 
    and OrgLevel4 is absent 
    and ordering of ORG levels is sorted randomly 
Then parameters are sorted in random order 
    and not all ORG levels 1-4 are present 


----------------------------------------------------------------
Test case SaveTests-5 : Test 5

When OrgLevel1 is (Id=1,Code=Division) 
    and OrgLevel2 is absent 
    and OrgLevel3 is (Id=3,Code=Team) 
    and OrgLevel4 is (Id=4,Code=Cell) 
    and ordering of ORG levels is sorted randomly 
Then parameters are sorted in random order 
    and not all ORG levels 1-4 are present 


----------------------------------------------------------------
Test case SaveTests-6 : Test 6

When OrgLevel1 is (Id=1,Code=Division) 
    and OrgLevel2 is absent 
    and OrgLevel3 is (Id=3,Code=Team) 
    and OrgLevel4 is absent 
    and ordering of ORG levels is no sorting 
Then not all ORG levels 1-4 are present 


----------------------------------------------------------------
Test case SaveTests-7 : Test 7

When OrgLevel1 is (Id=1,Code=Division) 
    and OrgLevel2 is absent 
    and OrgLevel3 is absent 
    and OrgLevel4 is (Id=4,Code=Cell) 
    and ordering of ORG levels is sorted ascending 
Then parameters are sorted in ascending order 
    and not all ORG levels 1-4 are present 


----------------------------------------------------------------
Test case SaveTests-8 : Test 8

When OrgLevel1 is (Id=1,Code=Division) 
    and OrgLevel2 is absent 
    and OrgLevel3 is absent 
    and OrgLevel4 is absent 
    and ordering of ORG levels is sorted descending 
Then parameters are sorted in descending order 
    and not all ORG levels 1-4 are present 


----------------------------------------------------------------
Test case SaveTests-9 : Test 9

When OrgLevel1 is absent 
    and OrgLevel2 is (Id=2,Code=Department) 
    and OrgLevel3 is (Id=3,Code=Team) 
    and OrgLevel4 is (Id=4,Code=Cell) 
    and ordering of ORG levels is sorted randomly 
Then parameters are sorted in random order 
    and not all ORG levels 1-4 are present 


----------------------------------------------------------------
Test case SaveTests-10 : Test 10

When OrgLevel1 is absent 
    and OrgLevel2 is (Id=2,Code=Department) 
    and OrgLevel3 is (Id=3,Code=Team) 
    and OrgLevel4 is absent 
    and ordering of ORG levels is sorted descending 
Then parameters are sorted in descending order 
    and not all ORG levels 1-4 are present 


----------------------------------------------------------------
Test case SaveTests-11 : Test 11

When OrgLevel1 is absent 
    and OrgLevel2 is (Id=2,Code=Department) 
    and OrgLevel3 is absent 
    and OrgLevel4 is (Id=4,Code=Cell) 
    and ordering of ORG levels is sorted randomly 
Then parameters are sorted in random order 
    and not all ORG levels 1-4 are present 


----------------------------------------------------------------
Test case SaveTests-12 : Test 12

When OrgLevel1 is absent 
    and OrgLevel2 is (Id=2,Code=Department) 
    and OrgLevel3 is absent 
    and OrgLevel4 is absent 
    and ordering of ORG levels is sorted descending 
Then parameters are sorted in descending order 
    and not all ORG levels 1-4 are present 


----------------------------------------------------------------
Test case SaveTests-13 : Test 13

When OrgLevel1 is absent 
    and OrgLevel2 is absent 
    and OrgLevel3 is (Id=3,Code=Team) 
    and OrgLevel4 is (Id=4,Code=Cell) 
    and ordering of ORG levels is no sorting 
Then not all ORG levels 1-4 are present 


----------------------------------------------------------------
Test case SaveTests-14 : Test 14

When OrgLevel1 is absent 
    and OrgLevel2 is absent 
    and OrgLevel3 is (Id=3,Code=Team) 
    and OrgLevel4 is absent 
    and ordering of ORG levels is sorted ascending 
Then parameters are sorted in ascending order 
    and not all ORG levels 1-4 are present 


----------------------------------------------------------------
Test case SaveTests-15 : Test 15

When OrgLevel1 is absent 
    and OrgLevel2 is absent 
    and OrgLevel3 is absent 
    and OrgLevel4 is (Id=4,Code=Cell) 
    and ordering of ORG levels is no sorting 
Then not all ORG levels 1-4 are present 


----------------------------------------------------------------
Test case SaveTests-16 : Test 16

When OrgLevel1 is absent 
    and OrgLevel2 is absent 
    and OrgLevel3 is absent 
    and OrgLevel4 is absent 
    and ordering of ORG levels is sorted descending 
Then parameters are sorted in descending order 
    and not all ORG levels 1-4 are present 
    and ORG levels 1-4 are all absent 



Coverage metrics:

Number of tests generated to cover combinations of Pairwise14 = 16
All combinations in Pairwise14 are used in tests

Number of tests generated to cover combinations of Ordering1 = 8
All combinations in Ordering1 are used in tests

Number of tests generated to cover combinations of Ordering2 = 8
All combinations in Ordering2 are used in tests

Number of tests generated to cover combinations of Ordering3 = 8
All combinations in Ordering3 are used in tests

Number of tests generated to cover combinations of Ordering4 = 8
All combinations in Ordering4 are used in tests

All coverage groups are used in tests

